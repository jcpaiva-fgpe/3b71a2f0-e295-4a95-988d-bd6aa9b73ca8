<p>At times, in a multitasking consultation, we will be interested to show records of one of the tables although they are not related to any record of the second table. On those occasions we will use external compositions.</p><blockquote><p><code>SELECT table1.column1, table1.column2, …, table2.column1, table2.column2, …<br/>FROM table1<br/>    [LEFT | RIGHT | FULL OUTER JOIN table2 ON (table1.column=table2.column)];</code></p></blockquote><h3><code>LEFT | RIGHT | FULL JOIN</code></h3><p>Depending on the clause accompanying the <code>JOIN</code>, will display all the logs on the left or right table that meet the restrictions, even if they do not have any record related to the other table.</p><h3>Example:</h3><p>In the following example, we will try to demonstrate the changes that occur due to the use of <code>LEFT</code> or <code>RIGHT JOIN</code> in a consultation.</p><p>We will begin by consulting the countries whose name begins by <em>'N'</em>.</p><blockquote><p><code>SELECT *<br/>FROM COUNTRIES<br/>WHERE COUNTRY_NAME LIKE 'N%';</code></p></blockquote><table align="center" border="1" summary="Results from query 1"><tbody><tr><th style="text-align: center; background-color: rgb(158, 158, 158);">COUNTRY_ID</th><th style="text-align: center; background-color: rgb(158, 158, 158);">COUNTRY_NAME</th><th style="text-align: center; background-color: rgb(158, 158, 158);">REGION_ID</th></tr><tr><td>NG</td><td>Nigeria</td><td>4</td></tr><tr><td>NL</td><td>Netherlands</td><td>1</td></tr></tbody></table><p>We can observe that there are 2 countries that comply with that restriction. However, if that result is combined, <em>through internal composition</em>with the related records of the table <strong><code>locations</code></strong>information <em>Nigeria</em> disappears, as there is no record in the table <code>locations</code> that is located in that country.</p><blockquote><p><code>SELECT COUNTRY_NAME, STREET_ADDRESS<br/>FROM LOCATIONS <strong>JOIN</strong> COUNTRIES USING (COUNTRY_ID)<br/>WHERE COUNTRY_NAME LIKE 'N%';</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="text-align: center; background-color: rgb(158, 158, 158);">COUNTRY_NAME</th><th style="text-align: center; background-color: rgb(158, 158, 158);">STREET_ADDRESS</th></tr><tr><td>Netherlands</td><td>Pieter Breughelstraat 837</td></tr></tbody></table><p>The result changes, if we simply add the clause <code>RIGHT</code> before <code>JOIN</code>making it come back <em>Nigeria</em> even if you do not have any record of the table <strong><code>locations</code></strong> related. <em>Note that we use <code>RIGHT</code> because the table <code>countries</code> is named to the <code>DERECHA</code> of <code>JOIN</code>.</em></p><blockquote><p><code>SELECT COUNTRY_NAME, STREET_ADDRESS<br/>FROM LOCATIONS <strong>RIGHT JOIN</strong> COUNTRIES USING (COUNTRY_ID)<br/>WHERE COUNTRY_NAME LIKE 'N%';</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">COUNTRY_NAME</th><th style="background-color:#9e9e9e; text-align:center">STREET_ADDRESS</th></tr><tr><td>Nigeria</td><td>-</td></tr><tr><td>Netherlands</td><td>Pieter Breughelstraat 837</td></tr></tbody></table><h3>Exercise</h3><p>Show the addresses (<code>locations</code>) found in the country whose code is <code>'UK'</code>, together with the names of the departments in that direction, in the event that any department is located in that direction.</p><p>Order the result alphabetically by the city.</p>
<p>The GROUP BY clause allows to obtain subtotals of the values present in a column or expression.</p><h3>Syntax:</h3><p>The clause <code>GROUP BY</code> We'll put it between <code>WHERE</code> and <code>ORDER BY</code>.</p><blockquote><p><code>SELECT columna1, columna2, ...<br/>FROM tabla1, tabla2, ...<br/>WHERE condición1, condición2, …<br/><strong>GROUP BY columna1, columna2, …</strong><br/>ORDER BY ordenación;</code></p></blockquote><h3>Example:</h3><p>Before seeing an example of a sentence under the GROUP BY clause, it should be recalled that in previous consultations we have worked with aggregate functions, which allowed to extract summary information from a set of rows. For example, we could report on the average wage (<code>AVG()</code>) of the employees of the scheme <code>HR</code>.</p><blockquote><p><code>SELECT AVG(SALARY) AS "AVERAGE SALARY"<br/>FROM employees;</code></p></blockquote><table align="center" border="1" summary="Results from query 1"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">AVERAGE SALARY</th></tr><tr><td style="text-align:center">6461.831775...</td></tr></tbody></table><p>We could also show the average salary of a particular department:</p><blockquote><p><code>SELECT AVG(SALARY) AS "AVERAGE SALARY"<br/>FROM employees</code><br/><code>WHERE DEPARTMENT_ID = 60;</code></p></blockquote><table align="center" border="1" summary="Results from query 1"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">AVERAGE SALARY</th></tr><tr><td style="text-align:center">5760</td></tr></tbody></table><p>But it would be illogical to have to consult each department to know what the average wage is in each department. The incorporation of the clause <code>GROUP BY</code> It will allow us to obtain a partial result for each of the elements by which it is grouped.</p><p>In the following example, we will group the employees by their <code>DEPARTMENT_ID</code>so that all those who have the same value in that attribute will participate in obtaining the partial result:</p><blockquote><p><code>SELECT DEPARTMENT_ID, AVG(SALARY) AS "AVERAGE SALARY"<br/>FROM employees<br/>GROUP BY DEPARTMENT_ID;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">AVERAGE SALARY</th></tr><tr><td style="text-align:center">50</td><td>3475.555555...</td></tr><tr><td style="text-align:center">40</td><td>6500</td></tr><tr><td style="text-align:center">110</td><td>10154</td></tr><tr><td style="text-align:center">90</td><td>19333.3333...</td></tr><tr><td style="text-align:center">30</td><td>4150</td></tr><tr><td style="text-align:center">70</td><td>10000</td></tr><tr><td style="text-align:center">-</td><td>7000</td></tr><tr><td style="text-align:center">10</td><td>4400</td></tr><tr><td style="text-align:center">20</td><td>9500</td></tr><tr><td style="text-align:center">60</td><td>5760</td></tr><tr><td style="text-align:center">100</td><td>8601.3333...</td></tr><tr><td style="text-align:center">80</td><td>8955.882352...</td></tr></tbody></table><p>Any one of the <strong>aggregate functions</strong> that we saw in the section of functions, can be used in conjunction with <code>GROUP BY</code>.</p><h3>Exercise:</h3><p>Shows the salary <em>MÍNIMO</em> and <em>MÁXIMO</em> of employees of each of the existing types of work.</p><p>Order the result alphabetically, in reverse order, according to the type of work.</p>
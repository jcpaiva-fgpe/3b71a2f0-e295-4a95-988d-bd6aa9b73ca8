<h1>Subqueries in the <code>WHERE</code> clause that return sets of values.</h1><p>If we use relational operators with a subquery that does not return a single value, the system will return an error.< /p><h3>Example:</h3><p>Let's imagine that we want to display the name and surname of the employee with the highest salary. One way to solve this query is with a very similar approach to the previous exercise: <em>"shows the employee whose salary is higher than that of his colleagues"</em>:</p><blockquote><p>< code>SELECT FIRST_NAME, LAST_NAME, SALARY<br />FROM employees<br />WHERE SALARY > (<br /> SELECT SALARY<br /> FROM employees<br />)<br />ORDER BY SALARY DESC;</ code></p></blockquote><p>What happens is that, in this case, there are many colleagues' salaries, so using the relational operator <code>></code> with all these data generates the following error:</p><blockquote><p><code><strong>ERROR:</strong> more than one row returned by a subquery used as an expression</code></p></blockquote>< p>In order to solve this error, we can accompany the relational operator with the clauses <code>ANY</code>, <code>ALL</code>, <code>EXISTS</code> or <code>NOT EXISTS</ code>.</p><p>With what the query would be <em>"shows that employee whose salary is <strong>greater than or equal to all</st rong> those of their colleagues"</em>.</p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME, SALARY<br />FROM employees<br />WHERE SALARY <strong>>= ALL </strong> (<br /> SELECT SALARY<br /> FROM employees<br />)<br />ORDER BY SALARY DESC;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">LAST_NAME</th><th style="background-color:#9e9e9e; text-align:center">SALARY</th></tr><tr><td>Steven</td><td>King</td><td>24000</td></tr></tbody ></table><p> </p><p> </p><h3>Exercise:</h3><p>Of the employees of the <code>'Shipping'</code> department, who is the one with the least seniority?</p><p>Sort the result descending by salary.</p>
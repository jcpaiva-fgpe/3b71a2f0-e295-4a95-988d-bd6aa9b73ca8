<h2><code>UNION</code></h2><p>The operations we will see in this section involve several consultations <code>SELECT</code>. Specifically, in the operation <code>UNION</code>, they combine the ranks of the first <code>SELECT</code> with the rows of the second <code>SELECT</code>Missing duplicate rows.</p><h3>Syntax</h3><blockquote><p><code>SELECT query</code></p></blockquote><p><code>UNION</code></p><p><code>SELECT query</code></p><p>The number of columns returning both SELECT queries should be the same and the types of those columns should be compatible.</p><h3>Example:</h3><p>Shows employees who are or have been in department 110:</p><p>First of all, let's look for the employees who are (employees) in department 110</p><blockquote><p><code>SELECT DISTINCT EMPLOYEE_ID, DEPARTMENT_ID<br/>FROM employees<br/>WHERE DEPARTMENT_ID = 110;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">EMPLOYEE_ID</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th></tr><tr><td>205</td><td>110</td></tr><tr><td>206</td><td>110</td></tr></tbody></table><p>Now we will look for the employees who were at some point (job_history) in department 110</p><blockquote><p><code>SELECT DISTINCT EMPLOYEE_ID, DEPARTMENT_ID<br/>FROM job_history<br/>WHERE DEPARTMENT_ID = 110;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">EMPLOYEE_ID</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th></tr><tr><td>101</td><td>110</td></tr></tbody></table><p>Finally, we combine both results to reach the required consultation:</p><blockquote><p><code>SELECT DISTINCT EMPLOYEE_ID, DEPARTMENT_ID<br/>FROM employees<br/>WHERE DEPARTMENT_ID = 110<br/><strong>UNION</strong><br/>SELECT DISTINCT EMPLOYEE_ID, DEPARTMENT_ID<br/>FROM job_history<br/>WHERE DEPARTMENT_ID = 110;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">EMPLOYEE_ID</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th></tr><tr><td>101</td><td>110</td></tr><tr><td>205</td><td>110</td></tr><tr><td>206</td><td>110</td></tr></tbody></table><p>Naturally, the logical thing would be to show the names and surnames of the employees, instead of their identifier, so a response with more information would be:</p><blockquote><p><code>SELECT DISTINCT FIRST_NAME, LAST_NAME, DEPARTMENT_ID<br/>FROM employees<br/>WHERE DEPARTMENT_ID = 110<br/>UNION<br/>SELECT DISTINCT FIRST_NAME, LAST_NAME, job_history.DEPARTMENT_ID<br/>FROM job_history JOIN employees USING (EMPLOYEE_ID)<br/>WHERE job_history.DEPARTMENT_ID = 110;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="text-align: center; background-color: rgb(158, 158, 158);">FIRST_NAME</th><th style="text-align: center; background-color: rgb(158, 158, 158);">LAST_NAME</th><th style="text-align: center; background-color: rgb(158, 158, 158);">DEPARTMENT_ID</th></tr><tr><td>Baby.</td><td>Kochhar</td><td>110</td></tr><tr><td>Shelley</td><td>Higgins</td><td>110</td></tr><tr><td>William</td><td>Gietz</td><td>110</td></tr></tbody></table><h3>Exercise</h3><p>Neena Kochhar is not comfortable in the current department, so he is seeing the option of moving to California or returning to one of the departments he has already been working on.</p><p>What are the departments that are either in the state of '<code>California</code>'or <code>Neena Kochhar</code> Have you been working on them before?</p>
<h3><code>CROSS JOIN</code></h3><p>Ele vai criar um produto cartesiano das linhas de ambas as tabelas para que possamos evitar o uso da cláusula <code>WHERE</code>.</p><p>Pode ser usado, por exemplo, para comparar valores que estão em linhas diferentes.</p><h3>Exemplo:</h3><p>Quais funcionários cobram mais do que o dobro de qualquer um dos funcionários no departamento 80?</p><blockquote><p><code>SELECT<br/>    WELL_PAID.LAST_NAME AS "LAST_NAME WELL_PAID",<br/>    WELL_PAID.SALARY AS "SALARY WELL_PAID",<br/>    BAD_PAID.LAST_NAME AS "LAST_NAME BAD_PAID",<br/>    BAD_PAID.SALARY AS "SALARY BAD_PAID"<br/>FROM employees WELL_PAID CROSS JOIN employees BAD_PAID<br/>WHERE WELL_PAID.SALARY >= BAD_PAID.SALARY * 2 AND BAD_PAID.DEPARTMENT_ID = 80<br/>ORDER BY BAD_PAID.LAST_NAME</code></p></blockquote><table align="center" border="1" summary="Results from query 3"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">SALARY WELL_PAID</th><th style="background-color:#9e9e9e; text-align:center">SALARY WELL_PAID</th><th style="background-color:#9e9e9e; text-align:center">LAST_NAME BAD_PAID</th><th style="background-color:#9e9e9e; text-align:center">SALARY BAD_PAID</th></tr><tr><td>Rei.</td><td>24000</td><td>Abel</td><td>11000</td></tr><tr><td>Russell.</td><td>14000</td><td>E</td><td>6400</td></tr><tr><td>De Haan</td><td>17000</td><td>E</td><td>6400</td></tr><tr><td>Kochhar</td><td>17000</td><td>E</td><td>6400</td></tr><tr><td>Rei.</td><td>...</td><td>...</td><td>...</td></tr></tbody></table><p>Devemos notar que, como usamos a mesma tabela duas vezes, devemos criar um alias para cada uso que fazemos dele para ser capaz de se referir aos atributos cujos valores queremos usar.</p><h3>Exercício</h3><p>Que empregado, que tem como chefe (<code>MANAGER_ID</code>) o empregado 100, tem uma comissão de duplo ou mais do que qualquer um dos colegas que têm esse mesmo chefe?</p>
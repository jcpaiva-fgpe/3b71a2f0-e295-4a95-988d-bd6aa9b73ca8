<p>A continuaci&oacute;n se muestran una tabla con algunas de las funciones de cadenas de caracteres de uso m&aacute;s com&uacute;n junto con el resultado que se obtiene con su uso.</p><table align="center" border="1" cellspacing="0" style="border-collapse:collapse; width:NaN"><tbody><tr><td style="background-color:#9e9e9e; border-color:#9e9e9e; border-style:solid; border-width:1px; text-align:center; vertical-align:top"><p><strong>Funci&oacute;n</strong></p></td><td style="background-color:#9e9e9e; border-color:#9e9e9e; border-style:solid; border-width:1px; text-align:center; vertical-align:top"><p><strong>Descripci&oacute;n</strong></p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>CHR (n)&nbsp;</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve el car&aacute;cter equivalente a n.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>CONCAT (cad1, cad2)</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve cad1 concatenada con cad2. equivalente a ||.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>LOWER (cad)</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve la cadena convertida a min&uacute;sculas.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>UPPER (cad)</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve la cadena convertida a may&uacute;sculas.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>INITCAP (cad)</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve cad1 con la primera letra de cada palabra en may&uacute;sculas.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>LPAD (cad1, n [, cad2])</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Rellena cad1 por la izquierda con cad2 o blancos hasta llegar a n.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>RPAD (cad1, n [,cad2])</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Rellena cad1 por la derecha con cad2 o blancos hasta llegar a n.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>LTRIM (cad, [,set])</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Suprime un conjunto de caracteres (set ) o blancos a la izquierda.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>RTRIM (cad [,set])</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Suprime un conjunto de caracteres (set ) o blancos a la derecha.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>REPLACE (cad, cad_b&uacute;squeda [,cadena-sustituci&oacute;n] )</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve cad con cada cad-b&uacute;squeda sustituida por cadena-</p><p>sustituci&oacute;n.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>S</strong><strong>UBSTR (cad, m [, n])&nbsp;</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve una subcadena de cad de longitud n desde el car&aacute;cter</p><p>posici&oacute;n m. Si m es negativo, comienza por el final.</p></td></tr><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>TRANSLATE (cad1, cad2, cad3)&nbsp;</strong></code></p></td><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Devuelve cad1 con los caracteres cad2 sustituidos por cad3.</p></td></tr></tbody></table><p>La lista completa de funciones la pod&eacute;is obtener de la documentaci&oacute;n de <a href="https://www.postgresql.org/docs/14/functions-string.html">Funciones y operadores con Strings en PostgreSQL</a>.</p><h3>Ejemplo:</h3><p>Comenzaremos los ejemplos con la funci&oacute;n <code>CONCAT(cad1, cad2)</code>, la cual devuelve una cadena de caracteres compuesta por la concatenaci&oacute;n de las dos cadenas que se env&iacute;an como argumentos, en el mismo orden en el que se env&iacute;an.</p><p>Suponiendo que el domio de la empresa <code>HR</code> es <em>hr.com</em>, vamos a generarles a los programadores su direcci&oacute;n completa de correo electr&oacute;nico:</p><blockquote><p><code>SELECT CONCAT(EMAIL, &#39;@hr.com&#39;) AS &quot;EMAIL&quot;<br />FROM employees<br />WHERE JOB_ID = &#39;IT_PROG&#39;;</code></p></blockquote><table align="center" border="1" summary="Results from query 3"><tbody><tr><th style="background-color:#9e9e9e; text-align:center"><p>EMAIL</p></th></tr><tr><td><p>AHUNOLD@hr.com</p></td></tr><tr><td><p>BERNST@hr.com</p></td></tr><tr><td><p>DAUSTIN@hr.com</p></td></tr><tr><td><p>VPATABAL@hr.com</p></td></tr><tr><td><p>DLORENTZ@hr.com</p></td></tr></tbody></table><p>Normalmente, las direcciones de correo electr&oacute;nico aparecen en min&uacute;sculas, por lo que a la sentencia anterior le vamos a a&ntilde;adir la funci&oacute;n <code>LOWER(cadena)</code>:</p><blockquote><p><code>SELECT CONCAT(<strong>LOWER(</strong>EMAIL<strong>)</strong>, &#39;@hr.com&#39;) AS &quot;EMAIL&quot;<br />FROM employees<br />WHERE JOB_ID = &#39;IT_PROG&#39;;</code></p></blockquote><table align="center" border="1" summary="Results from query 3"><tbody><tr><th style="background-color:#9e9e9e; text-align:center"><p>EMAIL</p></th></tr><tr><td><p>ahunold@hr.com</p></td></tr><tr><td><p>bernst@hr.com</p></td></tr><tr><td><p>daustin@hr.com</p></td></tr><tr><td><p>vpatabal@hr.com</p></td></tr><tr><td><p>dlorentz@hr.com</p></td></tr></tbody></table><p>El correo electr&oacute;nico de los empleados ya est&aacute; almacenado en un atributo de la tabla, pero est&aacute; generado con la primera letra del nombre concatenada con el apellido, de la siguiente forma:</p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME,</code><br /><code><strong>CONCAT(LOWER(CONCAT(SUBSTR(FIRST_NAME, 1, 1), LAST_NAME)), &#39;@hr.com&#39;) AS &quot;EMAIL&quot;</strong><br />FROM employees<br />WHERE JOB_ID = &#39;IT_PROG&#39;;</code></p></blockquote><table align="center" border="1" summary="Results from query 3"><tbody><tr><th style="background-color:#9e9e9e; text-align:center"><p>EMAIL</p></th></tr><tr><td><p>ahunold@hr.com</p></td></tr><tr><td><p>bernst@hr.com</p></td></tr><tr><td><p>daustin@hr.com</p></td></tr><tr><td><p><strong>vpataballa</strong>@hr.com</p></td></tr><tr><td><p>dlorentz@hr.com</p></td></tr></tbody></table><p>En realidad, si el apellido es muy largo, se cogen &uacute;nicamente los 7 primeros caracteres, quedando la sentencia de la siguiente forma:</p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME,<br />&nbsp;&nbsp;&nbsp; CONCAT(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOWER(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONCAT(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SUBSTR(FIRST_NAME, 1, 1),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>SUBSTR(LAST_NAME, 1, 7)</strong><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;@hr.com&#39;<br />&nbsp;&nbsp;&nbsp; )<br />&nbsp;&nbsp;&nbsp; AS &quot;EMAIL&quot;<br />FROM employees<br />WHERE JOB_ID = &#39;IT_PROG&#39;;</code></p></blockquote><table align="center" border="1" summary="Results from query 3"><tbody><tr><th style="background-color:#9e9e9e; text-align:center"><p>EMAIL</p></th></tr><tr><td><p>ahunold@hr.com</p></td></tr><tr><td><p>bernst@hr.com</p></td></tr><tr><td><p>daustin@hr.com</p></td></tr><tr><td><p><strong>vpatabal</strong>@hr.com</p></td></tr><tr><td><p>dlorentz@hr.com</p></td></tr></tbody></table><h3>MUY IMPORTANTE</h3><blockquote><p>La resoluci&oacute;n de este ejemplo demuestra c&oacute;mo alcanzar la soluci&oacute;n de algunos enunciados requiere de un refinamiento sucesivo de la soluci&oacute;n propuesta. Es decir, ir planteando sentencias cuyo resultado se va acercando progresivamente a la soluci&oacute;n requerida.</p></blockquote><h3>Ejercicio:</h3><p>Muestra, en una sola columna, el nombre y apellido de los programadores, en el formato que se muestra en los tests.</p><p>Ordena el resultado alfab&eacute;ticamente por el apellido.</p>
<p>Previous forms of internal compositions require that there be attributes with the same name in the two tables to relate and that their values refer to similar properties.</p><h3><code>JOIN ON</code></h3><p>It is used to unite tables in which column names do not match in both tables or it is necessary to establish more complicated partnerships.</p><h3>Example:</h3><p>The following sentence relates employees to their bosses. Such relationships are called <strong>reflective</strong>as it uses the same table on both sides of the <code>JOIN</code>. By using 2 times the same table, we are obliged to create an alias of each of the tables, in this case <code>WORKER</code> and <code>MANAGER</code>so that, when referring to the attributes, we can specify which table we want to extract the value of that attribute.</p><blockquote><p><code>SELECT<br/>    WORKER.FIRST_NAME AS "WORKERs FIRST_NAME",<br/>    WORKER.LAST_NAME AS "WORKERs LAST_NAME",<br/>    MANAGER.FIRST_NAME AS "MANAGERs FIRST_NAME",<br/>    MANAGER.LAST_NAME AS "MANAGERs LAST_NAME"<br/>FROM employees WORKER JOIN employees MANAGER<br/>ON (WORKER.MANAGER_ID = MANAGER.EMPLOYEE_ID)<br/>ORDER BY WORKER.LAST_NAME;</code></p></blockquote><p>We must note that, in this case, the relationship is being made between two attributes that do not have the same name. That relationship is:</p><blockquote><p><code>ON (WORKER.MANAGER_ID = MANAGER.EMPLOYEE_ID)</code></p></blockquote><p>and we must read it as: <em>relates those records in which the value of the attribute <code>MANAGER_ID</code> of the employee equals the value of the attribute <code>EMPLOYEE_ID</code> the manager.</em></p><table align="center" border="1" summary="Results from query 18"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">WORKERs FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">WORKERS LAST_NAME</th><th style="background-color:#9e9e9e; text-align:center">MANAGERs FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">MANAGERS LAST_NAME</th></tr><tr><td>Ellen.</td><td>Abel</td><td>Eleni</td><td>Zlotkey</td></tr><tr><td>Standard</td><td>And</td><td>Alberto</td><td>Errazuriz</td></tr><tr><td>Mozhe</td><td>Atkinson</td><td>Adam</td><td>Fripp</td></tr><tr><td>David</td><td>Austin</td><td>Alexander</td><td>Hunold</td></tr><tr><td>Herman</td><td>Baer</td><td>Baby.</td><td>Kochhar</td></tr></tbody></table><h3>Exercise</h3><p>It shows the name and surname of the heads of each department, alphabetically ordering them by the name of the department:</p>
<h3>Arithmetic dates.</h3>
<p>Before starting with the dates functions, it is important to understand that we can do certain arithmetic operations with the dates.</p><p>For example, we can increase or decrease a date in a number of days (even with fractions of days).</p><blockquote><p><code>SELECT<br/>    CURRENT_DATE -1 AS "YESTERDAY",<br/>    CURRENT_DATE AS "TODAY",<br/>    CURRENT_DATE + 1 AS "TOMORROW";</code></p></blockquote><table align="center" border="1" summary="Results from query 39"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">YESTERDAY</th><th style="background-color:#9e9e9e; text-align:center">ALLDAY</th><th style="background-color:#9e9e9e; text-align:center">TOMORROW</th></tr><tr><td>2022-09-22</td><td>2022-09-23</td><td>2022-09-24</td></tr></tbody></table><blockquote><p><em><code>CURRENT_DATE</code>: Returns the current date.</em></p></blockquote><p>Later, we can even subtract 2 dates and know the number of days between them.</p><p>But in addition to days, we can also add or subtract time intervals.</p><p>For example, we can increase or decrease a date in a number of months.</p><blockquote><p><code>SELECT<br/>    CURRENT_DATE - interval '1 month' AS "LAST MONTH",<br/>    CURRENT_DATE AS "TODAY",<br/>    CURRENT_DATE + interval '1 month' AS "NEXT MONTH";</code></p></blockquote><table align="center" border="1" summary="Results from query 39"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">LAST MONTH</th><th style="background-color:#9e9e9e; text-align:center">ALLDAY</th><th style="background-color:#9e9e9e; text-align:center">NEXT MONTH</th></tr><tr><td>2022-08-23 00:00:00</td><td>2022-09-23</td><td>2022-10-23 00:00:00</td></tr></tbody></table><blockquote><p><em><code>CURRENT_DATE</code>: Returns the current date.</em></p></blockquote><p>Later, we can even subtract 2 dates and know the number of days between them.</p><h3>Date functions</h3><p>Below is a table with some dates functions, along with the result they return.</p><table align="center" border="1" cellspacing="0" style="border-collapse:collapse; width:NaN"><tbody><tr><td style="background-color:#9e9e9e; border-color:#9e9e9e; border-style:solid; border-width:1px; text-align:center; vertical-align:top"><p><strong>Function</strong></p></td></tr></tbody></table><td style="background-color:#9e9e9e; border-color:#9e9e9e; border-style:solid; border-width:1px; text-align:center; vertical-align:top"><p><strong>Description</strong></p></td><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>AGE ( timestamp, timestamp ) → interval</strong></code></p></td></tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Returns a result in years, months and days, instead of just days.</p></td><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>DATE_TRUNC ( text, timestamp ) → timestamp</strong></code></p></td></tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Returns the truncated date to the specified accuracy.</p></td><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>EXTRACT ( field from timestamp ) → numeric<br/>EXTRACT ( field from interval ) → numeric</strong></code></p></td></tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Returns the chosen field of the date.</p></td><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>MAKE_DATE ( year int, month int, day int ) → date</strong></code></p></td></tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Create a date from the parameters of the year, month and day.</p></td><tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p><code><strong>NOW()</strong></code></p></td></tr><td style="border-bottom:1px solid #9e9e9e; border-left:1px solid #9e9e9e; border-right:1px solid #9e9e9e; border-top:1px solid #9e9e9e; vertical-align:top"><p>Returns the date of the system, taking into account the time zone.</p></td><p>The full list of functions can be obtained from the documentation <a href="https://www.postgresql.org/docs/14/functions-datetime.html">Date and time functions in PostgreSQL</a>.</p><h3>Example:</h3><p>Who has been engaged in the company for more than 30 years:<ol><li>We use the function <code>AGE</code> to know the <em>'age'</em> from the date of recruitment (<code>HIRE_DATE</code>until the present moment</li><li>of that result, we get the years with <code>EXTRACT</code></li><li>compared the result to 30</li></ol></p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME, HIRE_DATE<br/>FROM employees<br/>WHERE EXTRACT(year from AGE(CURRENT_DATE, HIRE_DATE)) >= 30<br/>ORDER BY HIRE_DATE;</code></p></blockquote><table align="center" border="1" summary="Results from query "><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">LAST_NAME</th><th style="background-color:#9e9e9e; text-align:center">HIRE_DATE</th></tr><tr><td>Steven</td><td>King</td><td>1987-06-17 00:00:00</td></tr><tr><td>Jennifer</td><td>Whalen</td><td>1987-09-17 00:00:00</td></tr><tr><td>Baby.</td><td>Kochhar</td><td>1989-09-21 00:00:00</td></tr><tr><td>Alexander</td><td>Hunold</td><td>1990-01-03 00:00:00</td></tr><tr><td>Bruce.</td><td>Ernst</td><td>1991-05-21 00:00:00</td></tr></tbody></table><h3>Exercise:</h3><p>Based on the previous example, use the function <code>MAKE_DATE</code> to obtain employees who were more than 30 years old, on 31 December 2020.</p><p>Order the result alphabetically by the <code>hire_date</code> field.</p>
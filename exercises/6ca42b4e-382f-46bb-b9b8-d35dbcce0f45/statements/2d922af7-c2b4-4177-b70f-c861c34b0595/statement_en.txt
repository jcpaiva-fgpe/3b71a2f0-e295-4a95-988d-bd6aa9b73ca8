<p>The clause <code>HAVING</code> allows to establish criteria on the resulting rows following the application of a <code>GROUP BY</code>.</p><h3>Syntax:</h3><p>The clause <code>HAVING</code> We'll put it <code>inmediatamente después del GROUP BY</code>, since their criteria will apply on the rows generated by the grouping.</p><blockquote><p><code>SELECT columna1, columna2, ...<br/>FROM tabla1, tabla2, ...<br/>WHERE condición1, condición2, …<br/><strong>GROUP BY columna1, columna2, …<br/>HAVING condición1, condición2, …</strong><br/>ORDER BY ordenación;</code></p></blockquote><p>It is very important to understand that, from this moment on, we have 2 places where selection criteria can be established:</p><ul><li><code>WHERE</code>: your criteria are evaluated before grouping.</li><li><code>HAVING</code>: your criteria are evaluated after grouping.</li></ul><h3>Example:</h3><p>In a previous example, we saw how to show the average wage of all employees by departments. On this occasion, instead of using all departments to calculate the average wage, we will use only those employees whose work contains the word <em>CLERK</em>:</p><blockquote><p><code>SELECT DEPARTMENT_ID, ROUND(AVG(SALARY)) AS "AVERAGE SALARY"<br/>FROM employees<br/><strong>WHERE JOB_ID LIKE '%CLERK%'</strong><br/>GROUP BY DEPARTMENT_ID;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">AVERAGE SALARY</th></tr><tr><td style="text-align:center">50</td><td>3000</td></tr><tr><td style="text-align:center">30</td><td>2780</td></tr></tbody></table><p>The criterion that the work of the employees must contain CLERK we have had to put it in the clause <code>WHERE</code>since, as you can see, after the grouping, we no longer have the data <code>JOB_ID</code>.</p><p>In the HAVING clause, we could only establish criteria for the data available after the grouping, i.e. the data in the previous table. For example, we might want to show only the departments in which the average wages of employees performing a job containing CLERK were less than 3000:</p><blockquote><p><code>SELECT DEPARTMENT_ID, ROUND(AVG(SALARY)) AS "AVERAGE SALARY"<br/>FROM employees<br/>WHERE JOB_ID LIKE '%CLERK%'<br/>GROUP BY DEPARTMENT_ID<br/><strong>HAVING AVG(SALARY) < 3000</strong>;</code></p></blockquote><table align="center" border="1" summary="Results from query"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">AVERAGE SALARY</th></tr><tr><td style="text-align:center">30</td><td>2780</td></tr></tbody></table><h3>Exercise:</h3><p>Shows the salary <em>MÍNIMO</em> and <em>MÁXIMO</em> of employees of each of the existing types of work.</p><p>It excludes from the grouping those in which MINE and MÁXIMO are equal.</p><p>Order the result alphabetically, in order ASCENDENTE, according to the type of work.</p>
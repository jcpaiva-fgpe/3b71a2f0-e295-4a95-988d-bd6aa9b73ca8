<p><code>NATURAL JOIN</code> Du måste använda den mycket noggrant, eftersom du ibland kan returnera oväntade resultat. Till exempel, om vi vill relatera, i ett samråd med <code>NATURAL JOIN</code>, styrelserna för anställda och avdelningar, servern skulle hitta två attribut med samma namn i varje tabell.<code>DEPARTMENT_ID</code> och <code>MANAGER_ID</code>) ) <em>Vad skulle du välja att relatera båda tabellerna?</em></p><h3><code>JOIN USING</code></h3><p>Denna klausul gör det möjligt att upprätta relationer som anger vilka gemensamma fält eller fält som ska användas för det.</p><h3>Exempel</h3><p>Följande samråd visar avdelningens anställda som heter "IT", vilket indikerar att attributet ska användas. <code>DEPARTMENT_ID</code> att relatera posterna i båda tabellerna. Jag menar de anställda som på attributet <code>DEPARTMENT_ID</code> ha samma värde som registrering av avdelningar som den har vid namn <em>"IT "</em>??</p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_NAME<br/>FROM employees <strong>JOIN</strong> departments <strong>USING(DEPARTMENT_ID)</strong><br/>WHERE DEPARTMENT_NAME = 'IT'<br/>ORDER BY LAST_NAME;</code></p><pre> first_name sist_name<br/> David Δ Austin EXPORT IT<br/> Bruce | Ernst = IT<br/> Alexander Δ Hunold IT IT IT IT IT<br/> Diana Δ Lorentz Δ IT<br/> Valli Δ Pataballa Δ IT<br/>(5 rader)</pre></blockquote><h3>Övning</h3><p>Den visar namn, efternamn och tid då arbetsförändringar har registrerats (<code>job_history</code>) i avdelning 50. Den använder för den attributet <code>EMPLOYEE_ID</code>som finns i båda tabellerna.</p><p>Beställ resultatet alfabetiskt av efternamn.</p>
<p><code>NATURAL JOIN</code> você precisa usá-lo muito cuidadosamente, como às vezes você pode retornar resultados inesperados. Por exemplo, se quisermos relacionar-nos, numa consulta com <code>NATURAL JOIN</code>, as placas de funcionários e departamentos, o servidor encontraria dois atributos com o mesmo nome em cada uma das tabelas (<code>DEPARTMENT_ID</code> e <code>MANAGER_ID</code>) <em>O que você escolheria relacionar ambas as tabelas?</em></p><h3><code>JOIN USING</code></h3><p>Esta cláusula permite estabelecer relações indicando quais campos ou campos comuns devem ser usados para ele.</p><h3>Exemplo</h3><p>A seguinte consulta mostra os funcionários do departamento denominados 'IT', indicando que o atributo deve ser usado <code>DEPARTMENT_ID</code> para relatar os registros de ambas as tabelas. Quero dizer, os empregados que, no atributo <code>DEPARTMENT_ID</code> tem o mesmo valor que o registro de departamentos que tem pelo nome <em>' '</em>?</p><blockquote><p><code>SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_NAME<br/>FROM employees <strong>JOIN</strong> departments <strong>USING(DEPARTMENT_ID)</strong><br/>WHERE DEPARTMENT_NAME = 'IT'<br/>ORDER BY LAST_NAME;</code></p><pre> first_name 日本語 último_name<br/> David Δ Austin Gerenciamento de contas<br/> Bruce (em inglês) Ernst Руский IT<br/> Alexander Δ Hunold 日本語 IT<br/> Diana Δ Lorentz Δ TI<br/> Valli Δ Pataballa Δ TI<br/>(5 linhas)</pre></blockquote><h3>Exercício</h3><p>Ele mostra o nome, sobrenomes e tempo em que as mudanças de trabalho foram registradas (<code>job_history</code>) no departamento 50. Ele usa para ele o atributo <code>EMPLOYEE_ID</code>que está presente em ambas as tabelas.</p><p>Encomende o resultado alfabeticamente por sobrenomes.</p>
<p>Daha önce de söylediğimiz gibi, alt sorguları <code>HAVING</code> veya <code>FROM</code> gibi yan tümcelerde de kullanabiliriz.</p><p><code> yan tümcesinde alt sorgu kullanma HAVING</code>, <code>WHERE</code> yan tümcesinde daha önce açıklanandan farklı değildir, bu nedenle bu bölümde <code>FROM</code> yan tümcesindeki kullanımına odaklanacağız. </ p><h2><code>FROM</code> içindeki alt sonuçlar.</h2><p>Unutmayın ki, <code>FROM</code> yan tümcesinde, gideceğimiz tablolara başvurmamız gerekir. sorguda kullanmak için.</p><blockquote><p><code>...<br />çalışanlardan...</code></p></blockquote><p>ŞUNU KULLANARAK departmanlara KATILIN Yukarıdaki < code>personel</code> ve <code>departments</code> örneği, <code>HR</code> şemasının tablolarıdır.</p><p>Ayrıca, <code >SELECT</ deyimleri kodu> tablo biçiminde görüntülenir, bu da onları <code>FROM</code> yan tümcesinde başvurulabilecek nesneler yapar, onlara bir <em>ta takma adı verdiğimiz sürece falan</em>.</p><h3>Örnek:</h3><p>Departmanlarındaki en yüksek ücretten daha fazla kıdeme sahip çalışanları gösteren bir açıklama oluşturacağız.</p>< p >Veritabanına sahip olmayan herkesin yapacağı gibi, önce her departmanda en yüksek maaşı alanların kim olduğuna ve işe alınma tarihlerinin ne olduğuna bakardım:</p><blockquote><p><code>FIRST_NAME SEÇ , DEPARTMENT_ID, HIRE_DATE<br />Çalışanlardan<br />NEREDE (DEPARTMENT_ID, MAAŞ) İÇİNDE (<br /> DEPARTMENT_ID, MAX(MAS) SEÇİN<br /> ÇALIŞANLARDAN<br /> DEPARTMENT_ID'YE GÖRE GRUP<br /> )<br />ORDER BY DEPARTMENT_ID;</code></p></blockquote><p>Sonuç aşağıdaki gibi bir <strong>tablo</strong> olacaktır:</p><table align=" center " border="1" özet="Sorgudan elde edilen sonuçlar"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">HIRE_DATE</th></tr><tr><td>Jennifer</td><td>10</td><td>17-SEP-03</td></tr ><tr><td>Michael</td><td>20</td><td>17-ŞUBAT-04</td></tr><tr><td>Den</td><td> 30</td><td>07-ARALIK-02</td></tr><tr><td>...</td><td>...</td><td>... </td></tr></tbody></table><p>Dersin ilerleyen bölümlerinde bu tablonun veritabanına kaydedilebileceğini bile göreceğiz.Şimdilik sadece onu vereceğiz. referans verebilmek için bir takma ad ( <code>BETTERPAID</code>).</p><p>Bu tabloya sahip olarak, artık kıdemi <code>BETTERPAID</code>'den daha yüksek olan çalışanları arayabiliriz. departmanlarından: </p><blockquote><p><code>FARKLI SEÇ EMP.FIRST_NAME, EMP.LAST_NAME, EMP.DEPARTMENT_ID, EMP.HIRE_DATE<br />ÇALIŞANLARDAN EMP JOIN <strong>BETTERPAID</strong> AÇIK (EMP. DEPARTMENT_ID = <strong>BETTERPAID</strong>.DEPARTMENT_ID)<br />WHERE EMP.HIRE_DATE <<strong>BETTERPAID</strong>.HIRE_DATE<br />EMP.DEPARTMENT_ID, EMP.LAST_NAME TARAFINDAN SİPARİŞ; </code> </p></blockquote><p>Zaten! ya da önceki sorguyu çalıştırırsak sonuç şöyle olur: <code>HATA: "daha iyi ödeme" ilişkisi yok</code></p><p>Yapmamız gereken tek şey şu sorguyu koymak. söz konusu tabloyu tanımlayan alt sorgu olarak <code>BETTERPAID</code> tablosunu elde etmek için kullanırız:</p><blockquote><p><code>SELECT DISTINCT EMP.FIRST_NAME, EMP.LAST_NAME, EMP.DEPARTMENT_ID, EMP.HIRE_DATE <br />ÇALIŞANLARDAN EMP KATIL <strong>(<br /> İLK_AD, DEPARTMENT_ID, HIRE_DATE SEÇİN<br /> ÇALIŞANLARDAN<br /> NEREDE (BÖLÜM_KİMLİĞİ, MAAŞ) (<br /> DEPARTMENT_ID SEÇİN, MAKS(MAaş )<br /> ÇALIŞANLARDAN<br /> DEPARTMENT_ID'YE GÖRE GRUP<br /> )<br /> DEPARTMENT_ID'YE GÖRE SİPARİŞ<br />) DAHA İYİ ÖDEME</strong> AÇIK (EMP.DEPARTMENT_ID = BETTERPAID.DEPARTMENT_ID)< br /> NEREDE EMP.HIRE_DATE < BETTERPAID.HIRE_DATE<br />EMP.DEPARTMENT_ID, EMP.LAST_NAME TARAFINDAN SİPARİŞ;</code></p></blockquote><p>Artık aradığımız veriler elde edildi: </p> <table align="center" border="1" Summary="Re sorgudan sonuçlar"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">LAST_NAME</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">HIRE_DATE</th></tr><tr><td>Sarah</td><td>Bell</td><td>50</td><td>04-ŞUBAT- 04</td></tr><tr><td>Alexis</td><td>Boğa</td><td>50</td><td>20-ŞUBAT-05</td></ tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr>< tr><td>David</td><td>Austin</td><td>60</td><td>25-Haziran-05</td></tr><tr><td>Ellen< /td><td>Abel</td><td>80</td><td>11-MAY-04</td></tr><tr><td>Janette</td><td>Kral </td><td>80</td><td>30-JAN-04</td></tr><tr><td>...</td><td>...</td ><td>...</td><td>...</td></tr></tbody></table><p>Alt sorguları iç içe yerleştirme olasılıkları sonsuzdur (<em>veya neredeyse< /em>) ve yavaş yavaş çözüme yaklaşarak sorguları çözmemize izin verin.</p><h3>Alıştırma:</h3><p>İK programında maaşları, yaptıkları iş için belirlenen asgari ücretle çakışan çalışanlar var. Bu çalışanlara karşılık gelen sorguya <em>MinimalPaid</em> adını vereceğiz.</p><p>Bu çalışanların çalıştığı departman başkanlarının kim olduğunu sorulursa öğrenin. maaş artışı. Bu bölüm başkanlarını bölüm adlarına göre sıralayın.</p>
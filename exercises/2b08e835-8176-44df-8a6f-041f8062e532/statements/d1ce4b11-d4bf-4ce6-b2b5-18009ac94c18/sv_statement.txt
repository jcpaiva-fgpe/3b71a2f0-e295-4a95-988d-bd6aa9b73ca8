<p>Som vi sa tidigare kan vi också använda underfrågor i satser som <code>HAVING</code> eller <code>FROM</code>.</p><p>Använda en underfråga i en <code>-sats HAVING</code>, skiljer sig inte från den som redan förklarats i <code>WHERE</code>-satsen, så vi kommer i detta avsnitt att fokusera på dess användning i <code>FROM</code>-satsen. </ p><h2>Subcobsults in <code>FROM</code>.</h2><p>Kom ihåg att i <code>FROM</code>-satsen måste vi hänvisa till tabellerna som vi ska gå till att använda i frågan.</p><blockquote><p><code>...<br />FRÅN anställda GÅR MED avdelningar MED...</code></p></blockquote><p>I exemplet ovan < code>anställda</code> och <code>avdelningar</code> är tabeller i <code>HR</code>-schemat.</p><p>Observera att resultatet av <koden >SELECT</-satser code> visas i tabellformat, vilket gör dem till objekt som kan refereras till i <code>FROM</code>-satsen, så länge vi ger dem ett <em>alias för ta bla</em>.</p><h3>Exempel:</h3><p>Vi ska bygga ett uttalande som visar de anställda som har högre tjänsteår än de högst betalda på sin avdelning.</p>< p >Precis som alla som inte har en databas skulle göra, skulle jag först leta upp vilka de högst betalda på varje avdelning är och vad deras anställningsdatum är:</p><blockquote><p><code>SELECT FIRST_NAME , DEPARTMENT_ID, HIRE_DATE<br />FRÅN anställda<br />VAR (DEPARTMENT_ID, LÖN) IN (<br /> VÄLJ DEPARTMENT_ID, MAX(LÖN)<br /> FRÅN ANSTÄLLDA<br /> GRUPP PER DEPARTMENT_ID<br /> )<br />ORDER BY DEPARTMENT_ID;</code></p></blockquote><p>Resultatet skulle bli <strong>en tabell</strong> som följande:</p><table align=" center " border="1" summary="Resultat från fråga"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">HIRE_DATE</th></tr><tr><td>Jennifer</td><td>10</td><td>17-SEP-03</td></tr ><tr><td>Michael</td><td>20</td><td>17-FEB-04</td></tr><tr><td>Den</td><td> 30</td><td>07-DEC-02</td></tr><tr><td>...</td><td>...</td><td>... </td></tr></tbody></table><p>I senare innehåll i kursen kommer vi att se att denna tabell till och med kan sparas i databasen. För närvarande kommer vi bara att ge den ett alias ( <code>BETTERPAID</code>), för att kunna referera till det.</p><p>Med den här tabellen kan vi nu söka efter anställda med högre tjänsteår än <code>BETTERPAID</code> av deras avdelning: </p><blockquote><p><code>VÄLJ DISTINCT EMP.FIRST_NAME, EMP.LAST_NAME, EMP.DEPARTMENT_ID, EMP.HIRE_DATE<br />FRÅN ANSTÄLLDA EMP GÅ MED <strong>BETTERPAID</strong> PÅ (EMP. DEPARTMENT_ID = <strong>BETTERPAID</strong>.DEPARTMENT_ID)<br />VAR EMP.HIRE_DATE <<strong>BETTERPAID</strong>.HIRE_DATE<br />ORDER AV EMP.DEPARTMENT_ID, EMP.LAST_NAME; </code> </p></blockquote><p>Redan! eller att om vi kör den föregående frågan skulle resultatet bli: <code>ERROR: relation "bättre betald" existerar inte</code></p><p>Det enda som återstår för oss att göra är att ställa frågan som vi använder för att erhålla tabellen <code>BETTERPAID</code>, som underfrågan som definierar tabellen:</p><blockquote><p><code>SELECT DISTINCT EMP.FIRST_NAME, EMP.LAST_NAME, EMP.DEPARTMENT_ID, EMP.HIRE_DATE <br />FRÅN ANSTÄLLDA EMP JOIN <strong>(<br /> SELECT FIRST_NAME, DEPARTMENT_ID, HIRE_DATE<br /> FRÅN anställda<br /> VAR (DEPARTMENT_ID, LÖN) IN (<br /> VÄLJ DEPARTMENT_ID, MAX(LÖN )<br /> FRÅN ANSTÄLLDA<br /> GRUPPER EFTER DEPARTMENT_ID<br /> )<br /> BESTÄLL EFTER DEPARTMENT_ID<br />) BÄTTREBETALT</strong> PÅ (EMP.DEPARTMENT_ID = BETTERPAID.DEPARTMENT_ID)< br /> WHERE EMP.HIRE_DATE < BETTERPAID.HIRE_DATE<br />ORDER BY EMP.DEPARTMENT_ID, EMP.LAST_NAME;</code></p></blockquote><p>Nu erhålls data vi letade efter: </p> <table align="center" border="1" summary="Re resultat från fråga"><tbody><tr><th style="background-color:#9e9e9e; text-align:center">FIRST_NAME</th><th style="background-color:#9e9e9e; text-align:center">LAST_NAME</th><th style="background-color:#9e9e9e; text-align:center">DEPARTMENT_ID</th><th style="background-color:#9e9e9e; text-align:center">HIRE_DATE</th></tr><tr><td>Sarah</td><td>Bell</td><td>50</td><td>04-FEB- 04</td></tr><tr><td>Alexis</td><td>Bull</td><td>50</td><td>20-FEB-05</td></ tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr>< tr><td>David</td><td>Austin</td><td>60</td><td>25-JUN-05</td></tr><tr><td>Ellen< /td><td>Abel</td><td>80</td><td>11-MAJ-04</td></tr><tr><td>Janette</td><td>Kung </td><td>80</td><td>30-JAN-04</td></tr><tr><td>...</td><td>...</td ><td>...</td><td>...</td></tr></tbody></table><p>Möjligheterna att kapsla underfrågor är oändliga (<em>eller nästan< /em>) och låt oss lösa frågor och gradvis närma oss lösningen.</p><h3>Övning:</h3><p>I HR-systemet finns det anställda vars lön sammanfaller med det lägsta som fastställts för jobbet de Vi kommer att namnge frågan som motsvarar dessa anställda som <em>MinimalPaid</em>.</p><p>Ta reda på vilka som är chefer för de avdelningar där dessa anställda arbetar ifall de blir tillfrågade en löneförhöjning. Sortera dessa avdelningschefer efter deras avdelningsnamn.</p>